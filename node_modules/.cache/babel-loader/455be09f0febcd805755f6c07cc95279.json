{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alans\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\teste\\\\Firebaseproject\\\\src\\\\pages\\\\login\\\\index.js\";\nimport { GoogleAuthProvider, getAuth, signInWithPopup } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst provider = new GoogleAuthProvider();\nexport const Login = () => {\n  const signInGoogle = () => {\n    const auth = getAuth();\n    signInWithPopup(auth, provider).then(result => {\n      // This gives you a Google Access Token. You can use it to access the Google API.\n      const credential = GoogleAuthProvider.credentialFromResult(result);\n      const token = credential.accessToken; // The signed-in user info.\n\n      const user = result.user; // ...\n    }).catch(error => {\n      // Handle Errors here.\n      const errorCode = error.code;\n      const errorMessage = error.message; // The email of the user's account used.\n\n      const email = error.customData.email; // The AuthCredential type that was used.\n\n      const credential = GoogleAuthProvider.credentialFromError(error); // ...\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 12\n  }, this);\n};\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["GoogleAuthProvider","getAuth","signInWithPopup","provider","Login","signInGoogle","auth","then","result","credential","credentialFromResult","token","accessToken","user","catch","error","errorCode","code","errorMessage","message","email","customData","credentialFromError"],"sources":["C:/Users/alans/OneDrive/Área de Trabalho/teste/Firebaseproject/src/pages/login/index.js"],"sourcesContent":["import { GoogleAuthProvider, getAuth, signInWithPopup } from \"firebase/auth\";\r\n\r\nconst provider = new GoogleAuthProvider();\r\n\r\nexport const Login = () => {\r\n    const signInGoogle = () => {\r\n        const auth = getAuth();\r\n        signInWithPopup(auth, provider)\r\n            .then((result) => {\r\n                // This gives you a Google Access Token. You can use it to access the Google API.\r\n                const credential = GoogleAuthProvider.credentialFromResult(result);\r\n                const token = credential.accessToken;\r\n                // The signed-in user info.\r\n                const user = result.user;\r\n                // ...\r\n            }).catch((error) => {\r\n                // Handle Errors here.\r\n                const errorCode = error.code;\r\n                const errorMessage = error.message;\r\n                // The email of the user's account used.\r\n                const email = error.customData.email;\r\n                // The AuthCredential type that was used.\r\n                const credential = GoogleAuthProvider.credentialFromError(error);\r\n                // ...\r\n            });\r\n    }\r\n    return <h1>Login</h1>\r\n}"],"mappings":";AAAA,SAASA,kBAAT,EAA6BC,OAA7B,EAAsCC,eAAtC,QAA6D,eAA7D;;AAEA,MAAMC,QAAQ,GAAG,IAAIH,kBAAJ,EAAjB;AAEA,OAAO,MAAMI,KAAK,GAAG,MAAM;EACvB,MAAMC,YAAY,GAAG,MAAM;IACvB,MAAMC,IAAI,GAAGL,OAAO,EAApB;IACAC,eAAe,CAACI,IAAD,EAAOH,QAAP,CAAf,CACKI,IADL,CACWC,MAAD,IAAY;MACd;MACA,MAAMC,UAAU,GAAGT,kBAAkB,CAACU,oBAAnB,CAAwCF,MAAxC,CAAnB;MACA,MAAMG,KAAK,GAAGF,UAAU,CAACG,WAAzB,CAHc,CAId;;MACA,MAAMC,IAAI,GAAGL,MAAM,CAACK,IAApB,CALc,CAMd;IACH,CARL,EAQOC,KARP,CAQcC,KAAD,IAAW;MAChB;MACA,MAAMC,SAAS,GAAGD,KAAK,CAACE,IAAxB;MACA,MAAMC,YAAY,GAAGH,KAAK,CAACI,OAA3B,CAHgB,CAIhB;;MACA,MAAMC,KAAK,GAAGL,KAAK,CAACM,UAAN,CAAiBD,KAA/B,CALgB,CAMhB;;MACA,MAAMX,UAAU,GAAGT,kBAAkB,CAACsB,mBAAnB,CAAuCP,KAAvC,CAAnB,CAPgB,CAQhB;IACH,CAjBL;EAkBH,CApBD;;EAqBA,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AACH,CAvBM;KAAMX,K"},"metadata":{},"sourceType":"module"}